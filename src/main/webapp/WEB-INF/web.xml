<web-app metadata-complete="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">


  <display-name>Entrepreneur</display-name>

   <servlet>
      <servlet-name>mvc-dispatcher</servlet-name>
      <servlet-class>
         org.springframework.web.servlet.DispatcherServlet
      </servlet-class>
      <load-on-startup>1</load-on-startup>
   </servlet>

   <servlet-mapping>
      <servlet-name>mvc-dispatcher</servlet-name>
      <url-pattern>/</url-pattern>
   </servlet-mapping>
   
   <context-param>
	   <param-name>contextConfigLocation</param-name>
	   <param-value>
	   		classpath*:/applicationContext.xml
	   </param-value>
	</context-param>

	
	
	<!-- <filter>
    <filter-name>hibernateFilter</filter-name>
    <filter-class>
      org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter
    </filter-class>
  </filter>
  <filter-mapping>
    <filter-name>hibernateFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping> -->

  <!-- Allows attributes to be accessed on the next request (typically success messages) -->
  <!-- Note: this is a sample-specific implementation of the FlashMap concept -->
  <!-- Official flash map support is planned for Spring 3.1 -->
  <!-- <filter>
    <filter-name>flashMapFilter</filter-name>
    <filter-class>nl.abnamro.ps.util.spring.mvc.FlashMapFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>flashMapFilter</filter-name>
    <url-pattern>/mentor/*</url-pattern>
  </filter-mapping> -->

  <filter>
    <filter-name>securityFilter</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>targetBeanName</param-name>
      <param-value>springSecurityFilterChain</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>securityFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
	
	
	<welcome-file-list>
	    <welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
	<error-page>
	  <error-code>500</error-code>
	  <location>/error.html</location>
	</error-page>

  <error-page>
    <error-code>404</error-code>
    <location>/not-found.html</location>
  </error-page>
  
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  
  <listener>
	   <listener-class>
	      org.springframework.web.context.ContextLoaderListener
	   </listener-class>
	</listener>
</web-app>
